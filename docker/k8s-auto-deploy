#!/bin/bash

usage() { echo "usage $0 -f <config-file> [-t timeout (Default 10seconds)]" 2>&1; exit 1; }

[ -z $1 ] && usage

while getopts ":f:t:" o; do
  case "${o}" in
    f)
      CONFIG=${OPTARG}
      ;;
    t) 
      TIMEOUT=${OPTARG}
      ;;
    *)
      usage
      ;;
  esac
done

[ -z ${TIMEOUT} ] && TIMEOUT=10

[ -f ${CONFIG} ] || echo "Config file: ${CONFIG} not in path"
[ -f ${CONFIG} ] || exit 1

echo "deploying..."
echo "executing: kubectl apply -f ${CONFIG} --record"
kubectl apply -f ${CONFIG} --record

# READ IN CONFIG FILE to find name of deployment
#Â This should be in kind: Deployment, metadata: , name: value
DEPLOYMENT=""
METADATA=""
NAME=""

while read -r line
do
  [[ $line == *"kind: Deployment"* ]]  && DEPLOYMENT=true
  [[ $line == *"metadata:"* ]] && METADATA=true
  [[ $line == *"name:"* ]]  && NAME=true
  [ -n "${DEPLOYMENT}" ] && [ -n "${METADATA}" ] && [ -n "${NAME}" ] && DEPLOY_NAME=$(echo $line | awk '{print $NF}')
  [ -n "${DEPLOYMENT}" ] && [ -n "${METADATA}" ] && [ -n "${NAME}" ] && break
done < "${CONFIG}"

echo "checking deployment: ${DEPLOY_NAME}"

STATUS=1
for (( i = 1; i <= ${TIMEOUT}; i++ ))
do
  sleep 1
  ROLLOUT_STATUS=$(kubectl rollout status deployments ${DEPLOY_NAME} --watch=false)
  [[ ${ROLLOUT_STATUS} == *"Waiting for rollout to finish:"* ]] && STATUS=1
  [[ ${ROLLOUT_STATUS} != *"Waiting for rollout to finish:"* ]] && STATUS=0
  [ $STATUS -eq 0 ] && break
  echo -n .
done
echo
echo ${ROLLOUT_STATUS}

if [ $STATUS -ne 0 ]; then
  echo "Rolling back ${DEPLOY_NAME}"
  kubectl rollout undo deployment/${DEPLOY_NAME}
fi


exit $STATUS
